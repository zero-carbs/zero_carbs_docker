services:
  zc_db:
    container_name: zc_db
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - PGUSER=${PGUSER}
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    hostname: zcdb
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1' || exit 1"]
      interval: 3s
      timeout: 60s
      retries: 5
    networks:
      - zc_network
  adminer:
    container_name: zc_adminer
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - zc_db
    hostname: zcadminer
    networks:
      - zc_network
  zc_server:
    container_name: zc_server
    build:
      context: ./zero_carbs_server
      dockerfile: Dockerfile
      args:
        HD_ID: ${HD_ID}
        HD_BIND: ${HD_BINDING}
        LCS: ${DB_URL}
        CLERK_SECRET_KEY: ${VITE_CLERK_SECRET_KEY}
        CLERK_PUBLISHABLE_KEY: ${VITE_CLERK_PUBLISHABLE_KEY}
    environment:
      - DB_URL=${DB_URL}
      - CLERK_USER_ID=${CLERK_USER_ID}
      - CLERK_EMAIL_ADDRESS=${CLERK_EMAIL_ADDRESS}
      - IS_DOCKER=true
    ports:
      - "8787:8787"
    hostname: zcserver
    networks:
      - zc_network
    command: npm run docker
    depends_on:
      zc_db:
        condition: service_healthy
        restart: true
  zc_client:
    container_name: zc_client
    build:
      context: ./zero_carbs_client
      dockerfile: Dockerfile
    environment:
      - VITE_LOCAL_SERVER=${VITE_LOCAL_SERVER}
      - VITE_CLERK_SECRET_KEY=${VITE_CLERK_SECRET_KEY}
      - VITE_CLERK_PUBLISHABLE_KEY_DEV=${VITE_CLERK_PUBLISHABLE_KEY}
      - MODE=${MODE}
    ports:
      - "5173:5173"
    hostname: zcclient
    networks:
      - zc_network
    command: npm run dev
    depends_on:
      - zc_server
  zc_nginx:
    container_name: zc_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${ZC_PORT}:80"
    hostname: zcnginx
    networks:
      - zc_network
    depends_on:
      - zc_client
      - zc_server
networks:
  zc_network:
    name: zc_network
    driver: bridge
